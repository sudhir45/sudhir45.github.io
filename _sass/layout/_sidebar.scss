
@use '../abstracts/variables' as v;
@use '../abstracts/mixins' as mx;
@use '../abstracts/breakpoints' as bp;
@use '../abstracts/placeholders';

$btn-border-width: 3px;
$btn-mb: 0.5rem;
// $sidebar-display: 'sidebar-display'; // No longer primarily using this for collapse logic

#sidebar {
  @include mx.pl-pr(0);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  overflow-y: auto;
  width: v.$sidebar-width; // Default expanded width
  background: var(--sidebar-bg);
  border-right: 1px solid var(--sidebar-border-color);
  transition: width 0.35s ease; // Animation for width change
  z-index: 1020; // Default z-index

  /* Hide scrollbar */
  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar {
    display: none;
  }

  // Remove the original theme's transform-based collapse for small screens,
  // as the new width-based collapse should be universal.
  // @include bp.lt(bp.get(lg)) {
  //   @include mx.slide;
  //   transform: translateX(-#{v.$sidebar-width});
  //   [#{$sidebar-display}] & { // This was for the theme's JS
  //     transform: translateX(0);
  //   }
  // }

  @include bp.xxxl {
    // Keep theme's adjustment for very large screens if desired, or remove if new logic handles it
    // For now, let's assume v.$sidebar-width is the only expanded width we care about.
    // width: v.$sidebar-width-large;
  }

  // Styles for content inside the sidebar (avatar, title, nav)
  // These should be hidden or handled when sidebar is collapsed
  // e.g., by setting opacity to 0 and overflow: hidden on #sidebar

  #avatar, .profile-wrapper, .site-title, .site-subtitle, nav, .sidebar-bottom {
    transition: opacity 0.3s ease;
    opacity: 1;
  }

  &.sidebar-collapsed {
    width: 0 !important; // Collapsed width
    overflow: hidden; // Hide content that would overflow

    #avatar, .profile-wrapper, .site-title, .site-subtitle, nav, .sidebar-bottom {
      opacity: 0;
      pointer-events: none; // Prevent interaction with hidden elements
    }
  }

  // Toggle button style
  #sidebar-toggle { // More specific selector
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 1050; // Above other sidebar content
    // Ensure it's visible even when sidebar is collapsed (if it moves outside)
    // This might need adjustment if the button is part of the 0-width area.
    // For now, assuming it stays visible or is handled by JS if sidebar is 0 width.
  }

  // Other existing styles for sidebar elements (%sidebar-link-hover, a, #avatar, etc.)
  // should largely remain the same, but ensure they don't conflict with collapse.
  %sidebar-link-hover {
    &:hover {
      color: var(--sidebar-active-color);
    }
  }

  a {
    @extend %sidebar-links;
  }

  #avatar {
    display: block;
    width: 6.5rem;
    height: 6.5rem;
    overflow: hidden;
    box-shadow: var(--avatar-border-color) 0 0 0 2px;
    transform: translateZ(0);

    @include bp.sm {
      width: 7rem;
      height: 7rem;
    }

    img {
      transition: transform 0.5s;
      &:hover {
        transform: scale(1.2);
      }
    }
  }

  .profile-wrapper {
    @include mx.mt-mb(2.5rem);
    @extend %clickable-transition;
    padding-left: 2.5rem;
    padding-right: 1.25rem;
    width: 100%;
    @include bp.lg { margin-top: 3rem; }
    @include bp.xxxl {
      margin-top: 3.5rem;
      margin-bottom: 2.5rem;
      padding-left: 3.5rem;
    }
  }

  .site-title {
    @extend %clickable-transition;
    @extend %sidebar-link-hover;
    font-family: inherit;
    font-weight: 900;
    font-size: 1.75rem;
    line-height: 1.2;
    letter-spacing: 0.25px;
    margin-top: 1.25rem;
    margin-bottom: 0.5rem;
    width: fit-content;
    color: var(--site-title-color);
  }

  .site-subtitle {
    font-size: 95%;
    color: var(--site-subtitle-color);
    margin-top: 0.25rem;
    word-spacing: 1px;
    user-select: none;
  }

  ul {
    margin-bottom: 2rem;
    li.nav-item {
      opacity: 0.9;
      width: 100%;
      @include mx.pl-pr(1.5rem);
      @include bp.xxxl { @include mx.pl-pr(2.75rem); }
      a.nav-link {
        @include mx.pt-pb(0.6rem);
        display: flex;
        align-items: center;
        border-radius: 0.75rem;
        font-weight: 600;
        &:hover { background-color: var(--sidebar-hover-bg); }
        i { font-size: 95%; opacity: 0.8; margin-right: 1.5rem; }
        span { font-size: 90%; letter-spacing: 0.2px; }
      }
      &.active {
        .nav-link {
          color: var(--sidebar-active-color);
          background-color: var(--sidebar-hover-bg);
          span { opacity: 1; }
        }
      }
      &:not(:first-child) { margin-top: 0.25rem; }
    }
  }

  .sidebar-bottom {
    padding-left: 2rem;
    padding-right: 1rem;
    margin-bottom: 1.5rem;
    @include bp.xxxl {
      padding-left: 2.75rem;
      margin-bottom: 1.75rem;
    }
    $btn-size: 1.75rem;
    %button {
      width: $btn-size;
      height: $btn-size;
      margin-bottom: $btn-mb;
      border-radius: 50%;
      color: var(--sidebar-btn-color);
      background-color: var(--sidebar-btn-bg);
      text-align: center;
      display: flex;
      align-items: center;
      justify-content: center;
      &:not(:focus-visible) { box-shadow: var(--sidebar-border-color) 0 0 0 1px; }
      &:hover { background-color: var(--sidebar-hover-bg); }
    }
    a {
      @extend %button;
      @extend %sidebar-link-hover;
      @extend %clickable-transition;
      &:not(:last-child) {
        margin-right: v.$sb-btn-gap;
        @include bp.xxxl { margin-right: v.$sb-btn-gap-lg; }
      }
    }
    i { line-height: $btn-size; }
    #mode-toggle {
      @extend %button;
      @extend %sidebar-links;
      @extend %sidebar-link-hover;
    }
    .icon-border {
      @extend %no-cursor;
      @include mx.ml-mr(calc((v.$sb-btn-gap - $btn-border-width) / 2));
      background-color: var(--sidebar-btn-color);
      content: '';
      width: $btn-border-width;
      height: $btn-border-width;
      border-radius: 50%;
      margin-bottom: $btn-mb;
      @include bp.xxxl { @include mx.ml-mr(calc((v.$sb-btn-gap-lg - $btn-border-width) / 2)); }
    }
  }
}

#main-wrapper {
  position: relative;
  margin-left: v.$sidebar-width;
  transition: margin-left 0.35s ease;
  padding-top: v.$topbar-height;
}

#sidebar.sidebar-collapsed ~ #main-wrapper {
  margin-left: 0;
}
