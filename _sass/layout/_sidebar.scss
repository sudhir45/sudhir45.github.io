
@use '../abstracts/variables' as v;
@use '../abstracts/mixins' as mx;
@use '../abstracts/breakpoints' as bp;
@use '../abstracts/placeholders';

$btn-border-width: 3px;
$btn-mb: 0.5rem;

#sidebar {
  @include mx.pl-pr(0);
  position: fixed;
  top: 0;
  left: 0;
  height: 100%;
  overflow-y: auto;
  // Default state: collapsed (width 0, content hidden)
  width: 0;
  background: var(--sidebar-bg);
  border-right: 1px solid var(--sidebar-border-color); // Consider removing border when width is 0
  transition: width 0.35s ease, border-color 0.35s ease; // Added border-color transition
  z-index: 1020;

  -ms-overflow-style: none;
  scrollbar-width: none;
  &::-webkit-scrollbar { display: none; }

  #avatar, .profile-wrapper, .site-title, .site-subtitle, nav, .sidebar-bottom {
    transition: opacity 0.3s ease; // Slightly faster opacity transition
    opacity: 0; // Hidden by default (when collapsed)
    pointer-events: none;
  }

  // Toggle button style (should always be visible if possible)
  #sidebar-trigger {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 1050;
    // This button might be an issue if sidebar width is 0.
    // A common pattern is to have the button outside the collapsible element,
    // or to give the sidebar a min-width to house the button.
    // For now, let's assume it's visible. Consider its position relative to the 0-width sidebar.
  }

  // --- Styles for sidebar elements (avatar, nav, etc.) ---
  %sidebar-link-hover { &:hover { color: var(--sidebar-active-color); } }
  a { @extend %sidebar-links; } // This placeholder might need to be defined or imported if not already.
  #avatar {
    display: block; width: 6.5rem; height: 6.5rem; overflow: hidden;
    box-shadow: var(--avatar-border-color) 0 0 0 2px; transform: translateZ(0);
    @include bp.sm { width: 7rem; height: 7rem; }
    img { transition: transform 0.5s; &:hover { transform: scale(1.2); } }
  }
  .profile-wrapper {
    @include mx.mt-mb(2.5rem); @extend %clickable-transition; // This placeholder might need to be defined.
    padding-left: 2.5rem; padding-right: 1.25rem; width: 100%;
    @include bp.lg { margin-top: 3rem; }
    @include bp.xxxl { margin-top: 3.5rem; margin-bottom: 2.5rem; padding-left: 3.5rem; }
  }
  .site-title {
    @extend %clickable-transition; @extend %sidebar-link-hover;
    font-family: inherit; font-weight: 900; font-size: 1.75rem; line-height: 1.2;
    letter-spacing: 0.25px; margin-top: 1.25rem; margin-bottom: 0.5rem;
    width: fit-content; color: var(--site-title-color);
  }
  .site-subtitle {
    font-size: 95%; color: var(--site-subtitle-color); margin-top: 0.25rem;
    word-spacing: 1px; user-select: none;
  }
  ul {
    margin-bottom: 2rem;
    li.nav-item {
      // opacity: 0.9; // Opacity is handled by parent #sidebar for collapse
      width: 100%; @include mx.pl-pr(1.5rem);
      @include bp.xxxl { @include mx.pl-pr(2.75rem); }
      a.nav-link {
        @include mx.pt-pb(0.6rem); display: flex; align-items: center;
        border-radius: 0.75rem; font-weight: 600;
        &:hover { background-color: var(--sidebar-hover-bg); }
        i { font-size: 95%; opacity: 0.8; margin-right: 1.5rem; }
        span { font-size: 90%; letter-spacing: 0.2px; }
      }
      &.active {
        .nav-link {
          color: var(--sidebar-active-color); background-color: var(--sidebar-hover-bg);
          // span { opacity: 1; } // Opacity handled by parent
        }
      }
      &:not(:first-child) { margin-top: 0.25rem; }
    }
  }
  .sidebar-bottom {
    padding-left: 2rem; padding-right: 1rem; margin-bottom: 1.5rem;
    @include bp.xxxl { padding-left: 2.75rem; margin-bottom: 1.75rem; }
    $btn-size: 1.75rem;
    %button { // This placeholder needs to be defined or imported.
      width: $btn-size; height: $btn-size; margin-bottom: $btn-mb; border-radius: 50%;
      color: var(--sidebar-btn-color); background-color: var(--sidebar-btn-bg);
      text-align: center; display: flex; align-items: center; justify-content: center;
      &:not(:focus-visible) { box-shadow: var(--sidebar-border-color) 0 0 0 1px; }
      &:hover { background-color: var(--sidebar-hover-bg); }
    }
    a { // Assuming %button is defined and available
      @extend %button; @extend %sidebar-link-hover; @extend %clickable-transition;
      &:not(:last-child) {
        margin-right: v.$sb-btn-gap;
        @include bp.xxxl { margin-right: v.$sb-btn-gap-lg; }
      }
    }
    i { line-height: $btn-size; }
    #mode-toggle { @extend %button; @extend %sidebar-links; @extend %sidebar-link-hover; } // Assuming %button is defined
    .icon-border { // Assuming %no-cursor is defined or placeholder.
      @extend %no-cursor; @include mx.ml-mr(calc((v.$sb-btn-gap - $btn-border-width) / 2));
      background-color: var(--sidebar-btn-color); content: ''; width: $btn-border-width;
      height: $btn-border-width; border-radius: 50%; margin-bottom: $btn-mb;
      @include bp.xxxl { @include mx.ml-mr(calc((v.$sb-btn-gap-lg - $btn-border-width) / 2)); }
    }
  }
}

// Main content area
#main-wrapper {
  position: relative;
  margin-left: 0; // Default margin when sidebar is collapsed
  transition: margin-left 0.35s ease;
  padding-top: v.$topbar-height; // Assuming this is from the theme
}

// Styles when sidebar is expanded (body has 'sidebar-display' attribute)
body[sidebar-display] {
  #sidebar {
    width: v.$sidebar-width; // Expanded width
    border-right-color: var(--sidebar-border-color); // Ensure border color is correct

    #avatar, .profile-wrapper, .site-title, .site-subtitle, nav, .sidebar-bottom {
      opacity: 1; // Visible
      pointer-events: auto;
    }
  }

  #main-wrapper {
    margin-left: v.$sidebar-width; // Margin when sidebar is expanded
  }
}
